// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/roll": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roll"
                ],
                "summary": "roll dice based on json post",
                "parameters": [
                    {
                        "description": "roll",
                        "name": "roll",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dice.RollRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dice.RollResponse"
                        }
                    }
                }
            }
        },
        "/roll/{input}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roll"
                ],
                "summary": "roll dice based on string input",
                "parameters": [
                    {
                        "type": "string",
                        "description": "input",
                        "name": "input",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dice.RollResponse"
                        }
                    }
                }
            }
        },
        "/rollImage/{input}": {
            "get": {
                "tags": [
                    "roll"
                ],
                "summary": "roll dice based on string input and return image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "input",
                        "name": "input",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "dice.DieRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "highest": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dice.DieResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "highest": {
                    "type": "integer"
                },
                "highest-kept": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rolls": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "subtotal": {
                    "type": "integer"
                },
                "unkept": {
                    "description": "LowestKept  []int ` + "`" + `json:\"lowest-kept\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dice.RollRequest": {
            "type": "object",
            "properties": {
                "dice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dice.DieRequest"
                    }
                }
            }
        },
        "dice.RollResponse": {
            "type": "object",
            "properties": {
                "dice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dice.DieResponse"
                    }
                },
                "image": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
